;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(query-replace-history helm-file-name-history tmphist helm-M-x-input-history woman-topic-history command-history read-expression-history shell-command-history org-read-date-history evil-ex-history buffer-name-history minibuffer-history file-name-history extended-command-history))
(setq query-replace-history '("\\begin{equation}" "\\[" "\\end{equation}" "\\]" "\\begin{equation}" "\\["))
(setq helm-file-name-history '("model_status.org" "model_status.org" "paddle.org" "plan.org" "dataset.org" "2015-12-09-rnn.org" "emacs.org" "mt.org" "path_resource.org" "2015-12-12-bloom-filter.org" "2015-12-12-bloom-filter.html" "common.css" "TSDGLBloom.frag" "init.el" "encoder-decoder.org" "index.org" "mt.org" "tools_and_paths.org" "knowledge.org" "index.org" "about.org" "init.el" "init.el" "case_20151130_314_pc_final.txt.d1cs.txt" "monitor.html" "fig_train_test_cost.html" "model.html" "shell.org" "explore.org" ".emacs~" "chelm.el" "README.org" "evil.el" "init.el" "init"))
(setq helm-M-x-input-history '("togg" "publi" "to" "togg" "pub" "publi" "publ" "publish" "publi" "to" "ins" "publi" "publ" "pub" "publi" "pub" "publi" "pub" "insert" "publish" "publi" "publ" "publi" "publ" "publis" "publi" "publ" "publi" "publ" "pub" "publi" "to" "packa" "package-install" "ins" "insert" #("|" 0 1 (fontified t line-prefix #("***** " 0 5 (face org-indent)) wrap-prefix #("***** " 0 6 (face org-indent)) face org-table)) "ins" "org-mo" "or" "org-inde" "insert cur" "publi" "pub" "publi" "publ" "tog" "publi" "publish" "publi" "pub" "pu" "publ" "publi" "ub" "publi" "term" "publi" "to" "pub" #("公式" 0 2 (face org-block font-lock-fontified t wrap-prefix #("*** " 0 4 (face org-indent)) line-prefix #("*** " 0 3 (face org-indent)) fontified t)) "pub" #("4" 0 1 (wrap-prefix #("*** " 0 4 (face org-indent)) line-prefix #("*** " 0 3 (face org-indent)) fontified t)) "pu" "publish" "pack" "package-install" "load-fi" "iima" "iim" "ins date" "insert curr" "pub" "tog" "pub" "publi " #("equation" 0 8 (fontified t line-prefix #("* " 0 1 (face org-indent)) wrap-prefix #("* " 0 2 (face org-indent)))) "export" "re" "repla" "pu" "publ" "pub" "publi" "iim" "pub" "toggle-tr" "toggle-tru" "iim" "publi" "org-inde" "iim" "shell-mode" "comint-dyna filename" "comint-dyna" "pu" "publi" "publis" "publish" "toggle-tru"))
(setq command-history '((evil-delete 1288 1304 'line nil nil) (evil-delete 1271 1272 'line nil nil) (evil-delete 1271 1274 'line nil nil) (evil-delete 1271 1290 'line nil nil) (evil-delete 1271 1272 'line nil nil) (evil-delete 1271 1298 'line nil nil) (evil-delete 1298 1323 'line nil nil) (evil-set-marker 115) (evil-set-marker 115) (evil-change 1252 1256 'exclusive nil nil) (evil-delete 1221 1222 'line nil nil) (evil-set-marker 115) (evil-change 1157 1160 'exclusive nil nil) (evil-change 1157 1161 'exclusive nil nil) (evil-set-marker 115) (evil-set-marker 115) (evil-delete 1150 1151 'line nil nil) (evil-set-marker 115) (evil-set-marker 115) (evil-change 1145 1149 'exclusive nil nil) (evil-delete 1114 1115 'line nil nil) (evil-set-marker 115) (evil-set-marker 115) (evil-delete 178 205 'line nil nil) (avy-goto-word-1 98 nil) (evil-set-marker 115) (evil-set-marker 115) (evil-delete 1275 1281 'line nil nil) (evil-set-marker 115) (evil-delete 5497 5504 'exclusive nil nil) (evil-set-marker 115) (evil-change 148 150 'exclusive nil nil) (evil-set-marker 115) (evil-set-marker 115) (evil-delete 537 539 'line nil nil) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 107) (evil-set-marker 107) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (toggle-truncate-lines nil) (helm-M-x nil "toggle-truncate-lines") (evil-set-marker 27) (evil-set-marker 115) (evil-change 338 369 'line nil nil) (evil-yank 264 316 'line nil nil) (evil-delete 272 294 'line nil nil) (evil-delete 1 2 'line nil nil) (org-publish-project '("blog" :components ("blog-notes" "blog-static")) nil) (helm-M-x nil "org-publish-project") (evil-delete 257 258 'line nil nil) (evil-delete 257 265 'line nil nil) (evil-delete 1129 1130 'line nil nil) (evil-delete 265 267 'exclusive nil nil) (evil-change 267 270 'exclusive nil nil) (evil-set-marker 115) (evil-delete 5490 5491 'line nil nil) (evil-set-marker 106) (evil-set-marker 115) (evil-delete 9494 9494 'line nil nil) (evil-delete 9494 9495 'line nil nil) (evil-delete 9495 9504 'line nil nil) (evil-delete 1093 1095 'line nil nil) (evil-set-marker 27) (evil-delete 9494 9494 'line nil nil) (evil-delete 9269 9270 'line nil nil) (evil-delete 8193 8194 'line nil nil) (evil-delete 7804 7805 'line nil nil) (evil-delete 7664 7665 'line nil nil) (evil-delete 7311 7312 'line nil nil) (evil-change 9098 9100 'exclusive nil nil) (evil-change 8981 8985 'exclusive nil nil) (evil-delete 8741 8742 'line nil nil) (evil-change 8532 8534 'exclusive nil nil) (evil-change 8347 8351 'exclusive nil nil) (evil-change 8545 8547 'exclusive nil nil) (evil-change 7899 7902 'exclusive nil nil) (evil-change 7368 7371 'exclusive nil nil) (evil-delete 7471 7529 'line nil nil) (evil-set-marker 115) (evil-set-marker 115) (toggle-truncate-lines nil) (helm-M-x nil "toggle-truncate-lines") (evil-delete 272 273 'line nil nil) (evil-delete 195 265 'line nil nil) (evil-delete 195 195 'exclusive nil nil) (evil-delete 137 138 'line nil nil) (evil-set-marker 115) (evil-set-marker 115) (evil-delete 803 803 'exclusive nil nil) (evil-delete 8644 8645 'line nil nil)))
(setq read-expression-history '("q"))
(setq shell-command-history '("date"))
(setq org-read-date-history '("   "))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("Ow" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("w:w" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e plan.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("q" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("we" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("e mt.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8)) #("w" 0 1 (ex-index 1)) #("e ~/project/ad_mt/docs/model_status.orgj" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40)) #("w" 0 1 (ex-index 1)) #("qa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e ~/.emacs.d/personal/init.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29)) #("w" 0 1 (ex-index 1)) #("e" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("w fig_latest_train_costs.html" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29)) #("w" 0 1 (ex-index 1)) #("e fig_train_test_cost.html" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26)) #("w" 0 1 (ex-index 1)) #("'<,'>w" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("'<,'>w" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("'<,'>w" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("qa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e ~/.emacs.d" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("w" 0 1 (ex-index 1)) #("e evil.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9)) #("w" 0 1 (ex-index 1)) #("e ~/.emacs.d/personal/init.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29)) #("w" 0 1 (ex-index 1)) #("e .emacs.d/personal/init.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e evil.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9))))
(setq buffer-name-history '("model_sta" "*Buffer List*" "*terminal*" "paddle.org" "mt.org" "mt.org" "init.el" "init.el" "mt.org" "emacs.org" "evil.el" "mt.org" "init.el"))
(setq minibuffer-history '("rnn.org" "me" "rnn.org" "produced" "rnn.org" "init" "rnn.org" "init" #("presentation" 0 12 (face font-lock-string-face fontified t)) "init" "rnn." "init" "rnn.org" "init" "/Users/baidu/org/beamer/" "/Users/baidu/.emacs.d/personal/ini" "/Users/baidu/org/beamer/rnn.org" "/Users/baidu/org/notes/20" "rnn2" "model_s" "/Users/baidu/org/notes/rnn2.org" "blog" "rnn" "/Users/baidu/project/ad_mt/docs/model" "model" "paddle.org" "/Users/baidu/project" "monitor" "/Users/baidu/project/ad_mt/docs/model" "model" "/Users/baidu/OneDrive/Documents/orgnotes/eigen.org" "paddle.org" "paddle" "model_s" "monitor" "/Users/baidu/project/ad_mt/docs/model_sta" "monitor" "/Users/baidu/project/ad_mt/docs/python_vs_paddle.org" "pid省份编号对照表" "/Users/baidu/OneDrive/Documents/orgnotes/bad" "mt.or" "blog" "" "blog" "rnn" "/Users/baidu/OneDrive/Documents/orgnotes/plan" "/Users/baidu/" "monitor" "/Users/baidu/project/ad_mt/docs/model_status.org" "model" "/Users/baidu/OneDrive/Documents/orgnotes/model_s" "blog" "rnn" "monitor" "model" "blog" "rnn" "mt.or" "pla.org" "mt.org" "blog" "rnn" "model" "rnn" "paddle" "rnn" "plan" "monitor" "model_sta" "rnn" "plan" "blog" "rnn" "Why You Should Use Cross-Entropy Error Instead Of Classification Error Or Mean Squared Error For Neural Network Classifier Training
" "deepl" "rnn" "mt" "/Users/baidu/OneDrive/Documents/orgnotes/pla" "plan.org" "/Users/baidu/OneDrive/Documents/orgnotes/data" "blog" "https://goodfeli.github.io/dlbook/" "rnn" "mt.org" "monitor" "model_" "deep" "mt.org" "Bengio <Deep Learning>" #("**" 0 1 (face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) fontified t) 1 2 (face org-level-2 wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-hide)) fontified t)) "emacs org" "/Users/baidu/OneDrive/Documents/orgnotes/deeplearning.org" "http://aidisheng.baidu.com/experiment/e/eid/53?lqtype=&isReverse=1&begin_time=2015-12-12+17%3A00%3A00&end_time=2015-12-15+23%3A00%3A00&cmatchSelect=21_22_225_204_90_201_65_25_222_223_66_228_229" "mt org" "/Users/baidu/OneDrive/Documents/orgnotes/badcase.org" "mt.org" "monitor" "mt.org" "55096.nmg01-hpc-mmaster01.nmg01.baidu.com" "55095.nmg01-hpc-mmaster01.nmg01.baidu.com"))
(setq file-name-history '("~/org/beamer/rnn.org" "~/.emacs.d/personal/init.el" "~/org/notes/2015-12-22-rnn1.org" "~/project/ad_mt/docs/model_status.org" "~/org/notes/2015-12-09-rnn.org" "~/org/superjom.github.io/2015-12-09-rnn.html" "~/project/ad_mt/tools/paddle_analysis/monitor/templates/model.html" "~/OneDrive/Documents/orgnotes/paddle.org" "~/OneDrive/Documents/orgnotes/badcase.org" "~/OneDrive/Documents/orgnotes/mt.org" "~/OneDrive/Documents/orgnotes/plan.org" "~/OneDrive/Documents/orgnotes/model_status.org" "~/OneDrive/Documents/orgnotes/dataset.org" "~/OneDrive/Documents/orgnotes/emacs.org" "~/project/ad_mt/docs/path_resource.org" "~/org/notes/2015-12-12-bloom-filter.org" "~/org/public_html/2015-12-12-bloom-filter.html" "~/org/notes/static/common.css" "/Applications/iBooks.app/Contents/Frameworks/TSReading.framework/Versions/A/Resources/TSDGLBloom.frag" "~/Onedrive/Documents/blog/rnn/encoder-decoder.org" "~/project/blogposts/index.org" "mt.org" "~/OneDrive/Documents/orgnotes/tools_and_paths.org" "~/project/ad_mt/docs/knowledge.org" "~/Onedrive/Documents/blog/index.org" "~/OneDrive/Documents/blog/about.org" "~/project/chun-emacs.d/personal/init.el" "~/project/chun-emacs.d/init.el" "~/Documents/cases/case_20151130_314_pc_final.txt.d1cs.txt" "~/project/ad_mt/tools/paddle_analysis/monitor/templates/monitor.html" "~/project/ad_mt/tools/paddle_analysis/monitor/templates/fig_train_test_cost.html" "~/OneDrive/Documents/orgnotes/shell.org" "~/OneDrive/Documents/orgnotes/explore.org" "~/.emacs~" "~/.emacs.d/personal/chelm.el" "~/.emacs.d/README.org" "~/.emacs.d/personal/evil.el" "~/.emacs.d/init.el" "~/.emacs.d/personal/init"))
(setq extended-command-history '("toggle-truncate-lines" "org-publish-project" "insert-current-date" "org-mode" "org-indent-mode" "term" "package-list-packages" "load-file" "iimage-mode" "org-export-dispatch" "replace-string" "comint-dynamic-complete" "customize-option" "helm-find-files" "op/do-publication-and-preview-site" "op/new-post" "op/new-repository" "html-mode" "customize-variable" "server-start" "helm-M-x" "emacs-lisp-mode" "company-mode" "text-mode" "c++-mode" "python-mode" "list-packages" "shell-mode" "load-theme" "package-list-packages-no-fetch" "org-babel-load-file" "org-babel-load-file" "package-show-package-list" "load-theme" "list-packages" "list-packages" "load-theme" "list-packages" "outline-mode" "load-theme" "evil-complete-next" "evil-Surround-edit" "evil-window-vsplit" "evil-split-buffer" "load-theme" "evil-mode" "global-hl-line-mode" "load-theme" "list-packages" "highlight-changes-mode" "load-theme"))
(setq search-ring '("chinese" "org-page" "org-pack" "org-page" "org-pagei" "company-mode" "powerlin" "powerline" "or" "article" "jazz" "helm" "tabs" "highlight-curre" "evil"))
(setq regexp-search-ring '("metro" "sty" "ri" "分别" "width" "rnn1" "img" "rnn1" "sitemap" "20" "font" "path" "mt.org" "orgnote" "blog" "relative"))
