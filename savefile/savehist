;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(query-replace-history helm-file-name-history tmphist helm-M-x-input-history woman-topic-history command-history read-expression-history shell-command-history org-read-date-history evil-ex-history buffer-name-history minibuffer-history file-name-history extended-command-history))
(setq query-replace-history '("\\begin{equation}" "\\[" "\\end{equation}" "\\]" "\\begin{equation}" "\\["))
(setq helm-file-name-history '("paddle.org" "init.el" "path_resource.org" "mt.org" "dataset.org" "mt.org" "plan.org" "tools_and_paths.org" "knowledge.org" "model_status.org" "index.org" "about.org" "init.el" "init.el" "case_20151130_314_pc_final.txt.d1cs.txt" "monitor.html" "fig_train_test_cost.html" "model.html" "shell.org" "explore.org" ".emacs~" "chelm.el" "README.org" "evil.el" "emacs.org" "init.el" "init"))
(setq helm-M-x-input-history '("pub" #("公式" 0 2 (fontified t line-prefix #("*** " 0 3 (face org-indent)) wrap-prefix #("*** " 0 4 (face org-indent)) font-lock-fontified t face org-block)) "pub" #("4" 0 1 (fontified t line-prefix #("*** " 0 3 (face org-indent)) wrap-prefix #("*** " 0 4 (face org-indent)))) "pu" "publish" "pack" "package-install" "load-fi" "iima" "iim" "ins date" "insert curr" "pub" "tog" "pub" "publi " #("equation" 0 8 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix #("* " 0 1 (face org-indent)) fontified t)) "export" "re" "repla" "pu" "publ" "pub" "publi" "iim" "pub" "toggle-tr" "toggle-tru" "iim" "publi" "org-inde" "iim" "shell-mode" "comint-dyna filename" "comint-dyna" "pu" "publi" "publis" "publish" "toggle-tru" "customize-op" #("static/common" 0 13 (face org-meta-line font-lock-fontified t fontified t wrap-prefix "" line-prefix "")) #("haha" 0 4 (face org-table wrap-prefix #("* " 0 2 (face org-indent)) line-prefix #("* " 0 1 (face org-indent)) fontified t)) "pu" "publish pro" "publish proj" "publish pro" "org-publi" "load-file" "insert-cur" "helm-find" "insert-cur" "op/new-re" "op/new" "op/do-publication " "op/do-publication" "op/do-" "op/new-po" "op/new" "load-file" "list-pa" "op" "package" "package-list-pa" "html-mode"))
(setq command-history '((evil-delete 193 195 'line nil nil) (evil-delete 1591 1602 'line nil nil) (org-publish-project '("blog" :components ("blog-notes" "blog-static")) nil) (helm-M-x nil "org-publish-project") (evil-delete 1574 1588 'line nil nil) (org-publish-project '("blog" :components ("blog-notes" "blog-static")) nil) (helm-M-x nil "org-publish-project") (org-publish-project '("blog" :components ("blog-notes" "blog-static")) nil) (helm-M-x nil "org-publish-project") (evil-delete 1582 1597 'line nil nil) (org-publish-project '("blog" :components ("blog-notes" "blog-static")) nil) (helm-M-x nil "org-publish-project") (org-publish-project '("blog" :components ("blog-notes" "blog-static")) nil) (helm-M-x nil "org-publish-project") (evil-delete 1675 1676 'line nil nil) (evil-delete 1653 1654 'line nil nil) (evil-delete 1634 1635 'line nil nil) (evil-delete 1613 1614 'line nil nil) (org-publish-project '("blog" :components ("blog-notes" "blog-static")) nil) (helm-M-x nil "org-publish-project") (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-delete 954 1029 'line nil nil) (evil-set-marker 115) (evil-delete 9303 9396 'line nil nil) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-delete 8708 8801 'line nil nil) (evil-change 8571 8573 'exclusive nil nil) (evil-change 8571 8574 'exclusive nil nil) (evil-set-marker 115) (evil-set-marker 115) (evil-delete 8158 8251 'line nil nil) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-change 1536 1540 'exclusive nil nil) (evil-change 1484 1488 'exclusive nil nil) (evil-set-marker 115) (evil-set-marker 115) (evil-delete 1984 1986 'exclusive nil nil) (evil-delete 2018 2051 'line nil nil) (evil-delete 2007 2016 'exclusive nil nil) (evil-goto-mark 27) (evil-set-marker 115) (evil-set-marker 115) (evil-delete 1959 1960 'line nil nil) (evil-delete 786 787 'line nil nil) (evil-find-char nil 50) (evil-set-marker 115) (evil-delete 672 673 'line nil nil) (evil-delete 673 714 'line nil nil) (package-list-packages nil) (helm-M-x nil "package-list-packages") (package-install 'chinese-fonts-setup) (helm-M-x nil "package-install") (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-yank 1338 1393 'line nil nil) (evil-set-marker 115) (evil-set-marker 115) (load-file "/Users/baidu/.emacs.d/personal/init.el") (helm-M-x nil "load-file") (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 106) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-delete 1421 1471 'line nil nil) (evil-change 1382 1384 'exclusive nil nil) (evil-delete 1219 1262 'line nil nil) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (evil-set-marker 115) (iimage-mode 'toggle) (helm-M-x nil "iimage-mode") (evil-set-marker 115) (iimage-mode 'toggle) (helm-M-x nil "iimage-mode") (evil-yank 2354 2379 'inclusive nil nil)))
(setq read-expression-history '("q"))
(setq org-read-date-history '("   "))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e plan.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("q" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("we" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("e mt.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8)) #("w" 0 1 (ex-index 1)) #("e ~/project/ad_mt/docs/model_status.orgj" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40)) #("w" 0 1 (ex-index 1)) #("qa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e ~/.emacs.d/personal/init.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29)) #("w" 0 1 (ex-index 1)) #("e" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("w fig_latest_train_costs.html" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29)) #("w" 0 1 (ex-index 1)) #("e fig_train_test_cost.html" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26)) #("w" 0 1 (ex-index 1)) #("'<,'>w" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("'<,'>w" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("'<,'>w" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("qa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e ~/.emacs.d" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("w" 0 1 (ex-index 1)) #("e evil.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9)) #("w" 0 1 (ex-index 1)) #("e ~/.emacs.d/personal/init.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29)) #("w" 0 1 (ex-index 1)) #("e .emacs.d/personal/init.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e evil.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9)) #("w" 0 1 (ex-index 1)) #("'<,'>w" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("e helm.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9)) #("w" 0 1 (ex-index 1)) #("e .emacs.d/personal/init.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e .emacs.d/personal/init.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("qa" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e ." 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("e .emacs.d/personal/init.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27)) #("qa" 0 1 (ex-index 1) 1 2 (ex-index 2))))
(setq buffer-name-history '("paddle.org" "mt.org" "mt.org" "init.el" "init.el" "mt.org" "emacs.org" "evil.el" "mt.org" "init.el"))
(setq minibuffer-history '("blog" "rnn" "monitor" "mt org" "paddle org" "54863.nmg01-hpc-mmaster01.nmg01.baidu.com" "54861.nmg01-hpc-mmaster01.nmg01.baidu.com" "54860.nmg01-hpc-mmaster01.nmg01.baidu.com" "model status" "padd org" "model sta" "mt org" "init " "mt org" "init" "mt org" "chinese" "mt." "/Users/baidu/.emacs.d/personal/" "init" "mt org" "padd" "mt org" "rnn" "mt.org" "54766.nmg01-hpc-mmaster01.nmg01.baidu.com" "model" "mt" "54761.nmg01-hpc-mmaster01.nmg01.baidu.com" "model_sta" "paddle.org" "/Users/baidu/project/ad_mt/docs/model_sta" "mt.org" "blog" "rnn" "emacs org" "emacs" "blog" "" "init" "" "blog" #("~/org/public_html/" 0 18 (face font-lock-string-face fontified t)) "init.e" "" "rnn" "" "rnn" "mt." "" "rnn" "emacs" "rnn" "paddl" "rnn" "中控页面" "paddle." "" "rnn" #("\211PNG" 0 4 (display (image :type png :file "/Users/baidu/org/notes/static/img/2015-12-09-rnn-rnn1.png") rear-nonsticky (display) read-only t front-sticky (read-only))) "rnn" "mt.o" "" "rnn" "mt.o" "rnn" "paddle" "rnn" "mt.org" "rnn" "trun" "rnn" "Publishing Org-mode files to HTML
" "emacs.org" "" "/Users/baidu/org/notes/2015-12-09-rnn.org" "init" "bl" "" "/Users/baidu/org/notes/index.org" "init" "" "index." "init" "/Users/baidu/project/blogposts/index.org" "/Users/baidu/.emacs.d/personal/" "init.el" "padd" "如何调参" "港大一博士" "path" "74441.nmg01-hpc-10g.dmop.baidu.com" "/Users/baidu/project/ad_mt/docs/model_status.org" "/Users/baidu/project/ad_mt/docs/model" "http://nmg01-hpc-10g-mon.dmop.baidu" "paddle.org" "mt.org" "/Users/baidu/.emacs.d/personal/" "/Users/baidu/.emacs.d/personal/ini" "/Users/baidu/.emacs.d/personal/init."))
(setq file-name-history '("~/org/notes/2015-12-09-rnn.org" "~/OneDrive/Documents/orgnotes/paddle.org" "~/project/ad_mt/docs/model_status.org" "~/OneDrive/Documents/orgnotes/mt.org" "~/.emacs.d/personal/init.el" "~/OneDrive/Documents/orgnotes/emacs.org" "~/Onedrive/Documents/blog/rnn/encoder-decoder.org" "~/project/blogposts/index.org" "~/project/ad_mt/docs/path_resource.org" "~/OneDrive/Documents/orgnotes/dataset.org" "mt.org" "~/OneDrive/Documents/orgnotes/plan.org" "~/OneDrive/Documents/orgnotes/tools_and_paths.org" "~/project/ad_mt/docs/knowledge.org" "~/Onedrive/Documents/blog/index.org" "~/OneDrive/Documents/blog/about.org" "~/project/chun-emacs.d/personal/init.el" "~/project/chun-emacs.d/init.el" "~/Documents/cases/case_20151130_314_pc_final.txt.d1cs.txt" "~/project/ad_mt/tools/paddle_analysis/monitor/templates/monitor.html" "~/project/ad_mt/tools/paddle_analysis/monitor/templates/fig_train_test_cost.html" "~/project/ad_mt/tools/paddle_analysis/monitor/templates/model.html" "~/OneDrive/Documents/orgnotes/shell.org" "~/OneDrive/Documents/orgnotes/explore.org" "~/.emacs~" "~/.emacs.d/personal/chelm.el" "~/.emacs.d/README.org" "~/.emacs.d/personal/evil.el" "~/.emacs.d/init.el" "~/.emacs.d/personal/init"))
(setq extended-command-history '("org-publish-project" "package-list-packages" "load-file" "iimage-mode" "insert-current-date" "toggle-truncate-lines" "org-export-dispatch" "replace-string" "org-indent-mode" "comint-dynamic-complete" "customize-option" "helm-find-files" "op/do-publication-and-preview-site" "op/new-post" "op/new-repository" "html-mode" "customize-variable" "server-start" "helm-M-x" "emacs-lisp-mode" "company-mode" "text-mode" "c++-mode" "python-mode" "org-mode" "list-packages" "shell-mode" "load-theme" "package-list-packages-no-fetch" "org-babel-load-file" "org-babel-load-file" "package-show-package-list" "load-theme" "list-packages" "list-packages" "load-theme" "list-packages" "outline-mode" "org-mode" "load-theme" "evil-complete-next" "evil-Surround-edit" "evil-window-vsplit" "evil-split-buffer" "load-theme" "evil-mode" "global-hl-line-mode" "load-theme" "list-packages" "highlight-changes-mode" "load-theme"))
(setq search-ring '("chinese" "org-page" "org-pack" "org-page" "org-pagei" "company-mode" "powerlin" "powerline" "or" "article" "jazz" "helm" "tabs" "highlight-curre" "evil"))
(setq regexp-search-ring '("width" "rnn1" "img" "rnn1" "sitemap" "20" "font" "path" "mt.org" "orgnote" "blog" "relative" "mt" "orgnot" "value" "bar"))
